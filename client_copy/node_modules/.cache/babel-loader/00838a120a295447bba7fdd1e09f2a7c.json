{"ast":null,"code":"var _jsxFileName = \"/Users/sherveersinghpannu/projects/map/client_copy/src/Components/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FindFriends from './FindFriends';\nimport MusicProposals from './MusicProposals';\nexport const Content = ({\n  me,\n  friends,\n  personalData,\n  topArtistData,\n  addFriendPage,\n  users\n}) => {\n  let FriendMap = new Map();\n  const [sortedArrayOfFriends, setSortedArrayOfFriends] = useState([]);\n\n  const matchFriends = () => {\n    console.log('F', friends);\n    friends && friends.forEach((friend, index) => {\n      console.log('<333333', friend);\n      friend.artists.forEach(friendArtist => {\n        console.log('<333333', friendArtist);\n\n        if (!FriendMap.has(friendArtist.name)) {\n          FriendMap.set(friendArtist.name, [friend.userName]);\n        }\n\n        if (!FriendMap.get(friendArtist.name).includes(friend.userName)) {\n          FriendMap.get(friendArtist.name).push(friend.userName);\n        }\n      });\n    });\n    let sorted = sortFriends();\n    setSortedArrayOfFriends(sorted);\n  };\n\n  const arrayOfArtists = []; //let sortedArrayOfFriends = []\n\n  const sortFriends = () => {\n    FriendMap.forEach((object, index) => {\n      const artistObject = {\n        artist: index,\n        listeners: object,\n        length: object.length\n      };\n      arrayOfArtists.push(artistObject);\n    });\n    let sorted = arrayOfArtists.sort((a, b) => {\n      return b.listeners.length - a.listeners.length;\n    }); //sortedArrayOfFriends = sorted\n\n    return sorted;\n  };\n\n  const hacklist = new Map();\n  useEffect(() => {\n    matchFriends();\n  }, [me, friends]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, addFriendPage ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FindFriends, {\n    personalData: personalData,\n    me: me,\n    allUsers: users,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"DISCOVER\"), /*#__PURE__*/React.createElement(RowBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"My top 5\"), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, topArtistData.items && topArtistData.items.map((artist, index) => index < 5 && /*#__PURE__*/React.createElement(ArtistBox, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '60px',\n      height: '60px',\n      borderRadius: '10px'\n    },\n    src: artist.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ArtistTitle, {\n    color: 'me',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, artist.name))))), me && me.friends && me.friends.map((friend, index) => {\n    hacklist[friend.userName] = index;\n  }), friends && friends.map((friend, friendIndex) => /*#__PURE__*/React.createElement(Box, {\n    key: friendIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, friend && friend.userName), friend && friend.artists && friend.artists.map((artist, index) => index < 5 && /*#__PURE__*/React.createElement(ArtistBox, {\n    color: hacklist[friend.userName],\n    key: index.toString() + 'artistbox',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '60px',\n      height: '60px',\n      borderRadius: '10px'\n    },\n    src: artist.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(ArtistTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 31\n    }\n  }, artist.name)))))), /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Based on your music taste\"), /*#__PURE__*/React.createElement(MusicProposals, {\n    me: me,\n    sortedArrayOfFriends: sortedArrayOfFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Content;\nexport const Container = styled.div`\n  display: flex;\n  padding: 2%;\n`;\nexport const Titles = styled.h2`\n  color: #333333;\n  font-family: arial;\n  font-size: 20px;\n  letter-spacing: 3px;\n  text-transform: uppercase;\n  height: 50px;\n`;\nexport const ArtistTitle = styled.p`\n  color: ${props => props.color === 'me' ? 'black' : 'white'};\n  margin-left: 6%;\n  font-size: 12px;\n  margin-top: 10%;\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n`;\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ArtistBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 20px;\n  border-radius: 10px;\n  background-color: ${props => {\n  if (props.color == 0) {\n    return '#16775E';\n  } else if (props.color === 1) {\n    return '#FF7262';\n  } else if (props.color === 2) {\n    return '#FF5FA2';\n  } else if (props.color === 3) {\n    return '#ffffff';\n  } else {\n    return '#F2C94C';\n  }\n}};\n  box-shadow: 5px 5px 15px #888888;\n  margin-bottom: 10px;\n  width: 90%;\n`;","map":{"version":3,"sources":["/Users/sherveersinghpannu/projects/map/client_copy/src/Components/Content.js"],"names":["React","useEffect","useState","styled","keyframes","FindFriends","MusicProposals","Content","me","friends","personalData","topArtistData","addFriendPage","users","FriendMap","Map","sortedArrayOfFriends","setSortedArrayOfFriends","matchFriends","console","log","forEach","friend","index","artists","friendArtist","has","name","set","userName","get","includes","push","sorted","sortFriends","arrayOfArtists","object","artistObject","artist","listeners","length","sort","a","b","hacklist","items","map","width","height","borderRadius","images","url","friendIndex","toString","Container","div","Titles","h2","ArtistTitle","p","props","color","Box","RowBox","Wrapper","ArtistBox"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AACtBC,EAAAA,EADsB;AAEtBC,EAAAA,OAFsB;AAGtBC,EAAAA,YAHsB;AAItBC,EAAAA,aAJsB;AAKtBC,EAAAA,aALsB;AAMtBC,EAAAA;AANsB,CAAD,KAOjB;AACJ,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;AAEA,QAAM,CAACC,oBAAD,EAAuBC,uBAAvB,IAAkDf,QAAQ,CAAC,EAAD,CAAhE;;AAEA,QAAMgB,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBX,OAAjB;AACAA,IAAAA,OAAO,IACLA,OAAO,CAACY,OAAR,CAAgB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACjCJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,MAAvB;AAEAA,MAAAA,MAAM,CAACE,OAAP,CAAeH,OAAf,CAAuBI,YAAY,IAAI;AACrCN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBK,YAAvB;;AACA,YAAI,CAACX,SAAS,CAACY,GAAV,CAAcD,YAAY,CAACE,IAA3B,CAAL,EAAuC;AACrCb,UAAAA,SAAS,CAACc,GAAV,CAAcH,YAAY,CAACE,IAA3B,EAAiC,CAACL,MAAM,CAACO,QAAR,CAAjC;AACD;;AACD,YAAI,CAACf,SAAS,CAACgB,GAAV,CAAcL,YAAY,CAACE,IAA3B,EAAiCI,QAAjC,CAA0CT,MAAM,CAACO,QAAjD,CAAL,EAAiE;AAC/Df,UAAAA,SAAS,CAACgB,GAAV,CAAcL,YAAY,CAACE,IAA3B,EAAiCK,IAAjC,CAAsCV,MAAM,CAACO,QAA7C;AACD;AACF,OARD;AASD,KAZD,CADF;AAcA,QAAII,MAAM,GAAGC,WAAW,EAAxB;AACAjB,IAAAA,uBAAuB,CAACgB,MAAD,CAAvB;AACD,GAlBD;;AAoBA,QAAME,cAAc,GAAG,EAAvB,CAzBI,CA0BJ;;AAEA,QAAMD,WAAW,GAAG,MAAM;AACxBpB,IAAAA,SAAS,CAACO,OAAV,CAAkB,CAACe,MAAD,EAASb,KAAT,KAAmB;AACnC,YAAMc,YAAY,GAAG;AACnBC,QAAAA,MAAM,EAAEf,KADW;AAEnBgB,QAAAA,SAAS,EAAEH,MAFQ;AAGnBI,QAAAA,MAAM,EAAEJ,MAAM,CAACI;AAHI,OAArB;AAKAL,MAAAA,cAAc,CAACH,IAAf,CAAoBK,YAApB;AACD,KAPD;AAQA,QAAIJ,MAAM,GAAGE,cAAc,CAACM,IAAf,CAAoB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzC,aAAOA,CAAC,CAACJ,SAAF,CAAYC,MAAZ,GAAqBE,CAAC,CAACH,SAAF,CAAYC,MAAxC;AACD,KAFY,CAAb,CATwB,CAYxB;;AACA,WAAOP,MAAP;AACD,GAdD;;AAeA,QAAMW,QAAQ,GAAG,IAAI7B,GAAJ,EAAjB;AACAd,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACV,EAAD,EAAKC,OAAL,CAFM,CAAT;AAGA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,aAAa,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,YAAY,EAAEF,YAA3B;AAAyC,IAAA,EAAE,EAAEF,EAA7C;AAAiD,IAAA,QAAQ,EAAEK,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADY,gBAKZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,GADH,eAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,aAAa,CAACkC,KAAd,IACClC,aAAa,CAACkC,KAAd,CAAoBC,GAApB,CACE,CAACR,MAAD,EAASf,KAAT,KACEA,KAAK,GAAG,CAAR,iBACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,KAAK,EAAE;AACLwB,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAME,IAAA,GAAG,EAAEX,MAAM,CAACY,MAAP,CAAc,CAAd,EAAiBC,GANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE,oBAAC,WAAD;AAAa,IAAA,KAAK,EAAE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,MAAM,CAACX,IADV,CATF,CAHN,CAFJ,CAFF,CADF,EAyBGnB,EAAE,IACDA,EAAE,CAACC,OADJ,IAECD,EAAE,CAACC,OAAH,CAAWqC,GAAX,CAAe,CAACxB,MAAD,EAASC,KAAT,KAAmB;AAChCqB,IAAAA,QAAQ,CAACtB,MAAM,CAACO,QAAR,CAAR,GAA4BN,KAA5B;AACD,GAFD,CA3BJ,EA8BGd,OAAO,IACNA,OAAO,CAACqC,GAAR,CAAY,CAACxB,MAAD,EAAS8B,WAAT,kBACV,oBAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAS9B,MAAM,IAAIA,MAAM,CAACO,QAA1B,CADF,EAEGP,MAAM,IACLA,MAAM,CAACE,OADR,IAECF,MAAM,CAACE,OAAP,CAAesB,GAAf,CACE,CAACR,MAAD,EAASf,KAAT,KACEA,KAAK,GAAG,CAAR,iBACE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAEqB,QAAQ,CAACtB,MAAM,CAACO,QAAR,CADjB;AAEE,IAAA,GAAG,EAAEN,KAAK,CAAC8B,QAAN,KAAmB,WAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,KAAK,EAAE,MADF;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,YAAY,EAAE;AAHT,KADT;AAME,IAAA,GAAG,EAAEX,MAAM,CAACY,MAAP,CAAc,CAAd,EAAiBC,GANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAYE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcb,MAAM,CAACX,IAArB,CAZF,CAHN,CAJJ,CADF,CA/BJ,CAFF,eA6DE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCA7DF,eA8DE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAEnB,EADN;AAEE,IAAA,oBAAoB,EAAEQ,oBAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9DF,CAFF,CANJ,CADF;AAgFD,CAtIM;AAwIP,eAAeT,OAAf;AAEA,OAAO,MAAM+C,SAAS,GAAGnD,MAAM,CAACoD,GAAI;;;CAA7B;AAKP,OAAO,MAAMC,MAAM,GAAGrD,MAAM,CAACsD,EAAG;;;;;;;CAAzB;AASP,OAAO,MAAMC,WAAW,GAAGvD,MAAM,CAACwD,CAAE;WACzBC,KAAK,IAAKA,KAAK,CAACC,KAAN,KAAgB,IAAhB,GAAuB,OAAvB,GAAiC,OAAS;;;;CADxD;AAOP,OAAO,MAAMC,GAAG,GAAG3D,MAAM,CAACoD,GAAI;;;;CAAvB;AAKP,OAAO,MAAMQ,MAAM,GAAG5D,MAAM,CAACoD,GAAI;;;CAA1B;AAKP,OAAO,MAAMS,OAAO,GAAG7D,MAAM,CAACoD,GAAI;;;CAA3B;AAKP,OAAO,MAAMU,SAAS,GAAG9D,MAAM,CAACoD,GAAI;;;;;sBAKdK,KAAK,IAAI;AAC3B,MAAIA,KAAK,CAACC,KAAN,IAAe,CAAnB,EAAsB;AACpB,WAAO,SAAP;AACD,GAFD,MAEO,IAAID,KAAK,CAACC,KAAN,KAAgB,CAApB,EAAuB;AAC5B,WAAO,SAAP;AACD,GAFM,MAEA,IAAID,KAAK,CAACC,KAAN,KAAgB,CAApB,EAAuB;AAC5B,WAAO,SAAP;AACD,GAFM,MAEA,IAAID,KAAK,CAACC,KAAN,KAAgB,CAApB,EAAuB;AAC5B,WAAO,SAAP;AACD,GAFM,MAEA;AACL,WAAO,SAAP;AACD;AACF,CAAC;;;;CAjBG","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport FindFriends from './FindFriends'\nimport MusicProposals from './MusicProposals'\n\nexport const Content = ({\n  me,\n  friends,\n  personalData,\n  topArtistData,\n  addFriendPage,\n  users\n}) => {\n  let FriendMap = new Map()\n\n  const [sortedArrayOfFriends, setSortedArrayOfFriends] = useState([])\n\n  const matchFriends = () => {\n    console.log('F', friends)\n    friends &&\n      friends.forEach((friend, index) => {\n        console.log('<333333', friend)\n\n        friend.artists.forEach(friendArtist => {\n          console.log('<333333', friendArtist)\n          if (!FriendMap.has(friendArtist.name)) {\n            FriendMap.set(friendArtist.name, [friend.userName])\n          }\n          if (!FriendMap.get(friendArtist.name).includes(friend.userName)) {\n            FriendMap.get(friendArtist.name).push(friend.userName)\n          }\n        })\n      })\n    let sorted = sortFriends()\n    setSortedArrayOfFriends(sorted)\n  }\n\n  const arrayOfArtists = []\n  //let sortedArrayOfFriends = []\n\n  const sortFriends = () => {\n    FriendMap.forEach((object, index) => {\n      const artistObject = {\n        artist: index,\n        listeners: object,\n        length: object.length\n      }\n      arrayOfArtists.push(artistObject)\n    })\n    let sorted = arrayOfArtists.sort((a, b) => {\n      return b.listeners.length - a.listeners.length\n    })\n    //sortedArrayOfFriends = sorted\n    return sorted\n  }\n  const hacklist = new Map()\n  useEffect(() => {\n    matchFriends()\n  }, [me, friends])\n  return (\n    <Container>\n      {addFriendPage ? (\n        <div>\n          <FindFriends personalData={personalData} me={me} allUsers={users} />\n        </div>\n      ) : (\n        <div>\n          {' '}\n          <Box>\n            <h1>DISCOVER</h1>\n            <RowBox>\n              <Box>\n                <Titles>My top 5</Titles>\n                <Wrapper>\n                  {topArtistData.items &&\n                    topArtistData.items.map(\n                      (artist, index) =>\n                        index < 5 && (\n                          <ArtistBox key={index}>\n                            <img\n                              style={{\n                                width: '60px',\n                                height: '60px',\n                                borderRadius: '10px'\n                              }}\n                              src={artist.images[0].url}\n                            ></img>\n                            <ArtistTitle color={'me'}>\n                              {artist.name}\n                            </ArtistTitle>\n                          </ArtistBox>\n                        )\n                    )}\n                </Wrapper>\n              </Box>\n              {me &&\n                me.friends &&\n                me.friends.map((friend, index) => {\n                  hacklist[friend.userName] = index\n                })}\n              {friends &&\n                friends.map((friend, friendIndex) => (\n                  <Box key={friendIndex}>\n                    <Titles>{friend && friend.userName}</Titles>\n                    {friend &&\n                      friend.artists &&\n                      friend.artists.map(\n                        (artist, index) =>\n                          index < 5 && (\n                            <ArtistBox\n                              color={hacklist[friend.userName]}\n                              key={index.toString() + 'artistbox'}\n                            >\n                              <img\n                                style={{\n                                  width: '60px',\n                                  height: '60px',\n                                  borderRadius: '10px'\n                                }}\n                                src={artist.images[0].url}\n                              ></img>\n                              <ArtistTitle>{artist.name}</ArtistTitle>\n                            </ArtistBox>\n                          )\n                      )}\n                  </Box>\n                ))}\n            </RowBox>\n\n            <Titles>Based on your music taste</Titles>\n            <MusicProposals\n              me={me}\n              sortedArrayOfFriends={sortedArrayOfFriends}\n            />\n          </Box>\n        </div>\n      )}\n    </Container>\n  )\n}\n\nexport default Content\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 2%;\n`\n\nexport const Titles = styled.h2`\n  color: #333333;\n  font-family: arial;\n  font-size: 20px;\n  letter-spacing: 3px;\n  text-transform: uppercase;\n  height: 50px;\n`\n\nexport const ArtistTitle = styled.p`\n  color: ${props => (props.color === 'me' ? 'black' : 'white')};\n  margin-left: 6%;\n  font-size: 12px;\n  margin-top: 10%;\n`\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n`\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ArtistBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 20px;\n  border-radius: 10px;\n  background-color: ${props => {\n    if (props.color == 0) {\n      return '#16775E'\n    } else if (props.color === 1) {\n      return '#FF7262'\n    } else if (props.color === 2) {\n      return '#FF5FA2'\n    } else if (props.color === 3) {\n      return '#ffffff'\n    } else {\n      return '#F2C94C'\n    }\n  }};\n  box-shadow: 5px 5px 15px #888888;\n  margin-bottom: 10px;\n  width: 90%;\n`\n"]},"metadata":{},"sourceType":"module"}