{"ast":null,"code":"var _jsxFileName = \"/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/Components/Content.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport FindFriends from './FindFriends';\nimport MusicProposals from './MusicProposals';\nexport const Content = ({\n  me,\n  friends,\n  personalData,\n  topArtistData,\n  addFriendPage\n}) => {\n  let FriendMap = new Map();\n  const [sortedArrayOfFriends, setSortedArrayOfFriends] = useState([]);\n\n  const matchFriends = () => {\n    friends.forEach((friend, index) => {\n      friend.artists.forEach(friendArtist => {\n        console.log('friend', friend);\n\n        if (!FriendMap.has(friendArtist)) {\n          FriendMap.set(friendArtist, [friend.userName]);\n        }\n\n        if (!FriendMap.get(friendArtist).includes(friend.userName)) {\n          FriendMap.get(friendArtist).push(friend.userName);\n        }\n      });\n    });\n    let sorted = sortFriends();\n    console.log('friends?', friends);\n    setSortedArrayOfFriends(sorted);\n  };\n\n  const arrayOfFriends = []; //let sortedArrayOfFriends = []\n\n  const sortFriends = () => {\n    FriendMap.forEach((object, index) => {\n      const friendObject = {\n        artist: index,\n        listeners: object,\n        length: object.length\n      };\n      arrayOfFriends.push(friendObject);\n    });\n    let sorted = arrayOfFriends.sort((a, b) => {\n      return b.listeners.length - a.listeners.length;\n    }); //sortedArrayOfFriends = sorted\n\n    return sorted;\n  };\n\n  useEffect(() => {\n    matchFriends();\n  }, [me, friends]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, addFriendPage ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FindFriends, {\n    personalData: personalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, ' ', /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"DISCOVER\"), /*#__PURE__*/React.createElement(RowBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"My top 5\"), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, topArtistData.items && topArtistData.items.map((artist, index) => index < 5 && /*#__PURE__*/React.createElement(ArtistBox, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '60px',\n      height: '60px',\n      borderRadius: '10px'\n    },\n    src: artist.images[0].url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(ArtistTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 29\n    }\n  }, artist.name))))), friends && friends.map((friend, key) => /*#__PURE__*/React.createElement(Box, {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, friend && friend.userName, \"'s top 5\"), friend && friend.artists && friend.artists.map((artist, index) => index < 5 && /*#__PURE__*/React.createElement(ArtistBox, {\n    key: index.toString() + 'artistbox',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '60px',\n      height: '60px',\n      borderRadius: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(ArtistTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 31\n    }\n  }, artist)))))), /*#__PURE__*/React.createElement(Titles, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Based on your music taste\"), /*#__PURE__*/React.createElement(MusicProposals, {\n    sortedArrayOfFriends: sortedArrayOfFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Content;\nexport const Container = styled.div`\n  display: flex;\n  padding: 2%;\n`;\nexport const Titles = styled.h2`\n  color: #333333;\n  font-family: arial;\n  font-size: 20px;\n  letter-spacing: 3px;\n  text-transform: uppercase;\n`;\nexport const ArtistTitle = styled.p`\n  color: white;\n  margin-left: 6%;\n  font-size: 12px;\n  margin-top: 10%;\n`;\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n`;\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ArtistBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 20px;\n  border-radius: 10px;\n  background-color: #333333;\n  box-shadow: 5px 5px 15px #888888;\n  margin-bottom: 10px;\n  width: 90%;\n`;","map":{"version":3,"sources":["/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/Components/Content.js"],"names":["React","useEffect","useState","styled","keyframes","FindFriends","MusicProposals","Content","me","friends","personalData","topArtistData","addFriendPage","FriendMap","Map","sortedArrayOfFriends","setSortedArrayOfFriends","matchFriends","forEach","friend","index","artists","friendArtist","console","log","has","set","userName","get","includes","push","sorted","sortFriends","arrayOfFriends","object","friendObject","artist","listeners","length","sort","a","b","items","map","width","height","borderRadius","images","url","name","key","toString","Container","div","Titles","h2","ArtistTitle","p","Box","RowBox","Wrapper","ArtistBox"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport FindFriends from './FindFriends'\nimport MusicProposals from './MusicProposals'\n\nexport const Content = ({\n  me,\n  friends,\n  personalData,\n  topArtistData,\n  addFriendPage\n}) => {\n  let FriendMap = new Map()\n\n  const [sortedArrayOfFriends, setSortedArrayOfFriends] = useState([])\n  const matchFriends = () => {\n    friends.forEach((friend, index) => {\n      friend.artists.forEach(friendArtist => {\n        console.log('friend', friend)\n        if (!FriendMap.has(friendArtist)) {\n          FriendMap.set(friendArtist, [friend.userName])\n        }\n        if (!FriendMap.get(friendArtist).includes(friend.userName)) {\n          FriendMap.get(friendArtist).push(friend.userName)\n        }\n      })\n    })\n    let sorted = sortFriends()\n    console.log('friends?', friends)\n    setSortedArrayOfFriends(sorted)\n  }\n\n  const arrayOfFriends = []\n  //let sortedArrayOfFriends = []\n\n  const sortFriends = () => {\n    FriendMap.forEach((object, index) => {\n      const friendObject = {\n        artist: index,\n        listeners: object,\n        length: object.length\n      }\n      arrayOfFriends.push(friendObject)\n    })\n    let sorted = arrayOfFriends.sort((a, b) => {\n      return b.listeners.length - a.listeners.length\n    })\n    //sortedArrayOfFriends = sorted\n    return sorted\n  }\n\n  useEffect(() => {\n    matchFriends()\n  }, [me, friends])\n  return (\n    <Container>\n      {addFriendPage ? (\n        <div>\n          <FindFriends personalData={personalData} />\n        </div>\n      ) : (\n        <div>\n          {' '}\n          <Box>\n            <h1>DISCOVER</h1>\n            <RowBox>\n              <Box>\n                <Titles>My top 5</Titles>\n                <Wrapper>\n                  {topArtistData.items &&\n                    topArtistData.items.map(\n                      (artist, index) =>\n                        index < 5 && (\n                          <ArtistBox key={index}>\n                            <img\n                              style={{\n                                width: '60px',\n                                height: '60px',\n                                borderRadius: '10px'\n                              }}\n                              src={artist.images[0].url}\n                            ></img>\n                            <ArtistTitle>{artist.name}</ArtistTitle>\n                          </ArtistBox>\n                        )\n                    )}\n                </Wrapper>\n              </Box>\n              {friends &&\n                friends.map((friend, key) => (\n                  <Box key={key}>\n                    <Titles>{friend && friend.userName}'s top 5</Titles>\n                    {friend &&\n                      friend.artists &&\n                      friend.artists.map(\n                        (artist, index) =>\n                          index < 5 && (\n                            <ArtistBox key={index.toString() + 'artistbox'}>\n                              <div\n                                style={{\n                                  width: '60px',\n                                  height: '60px',\n                                  borderRadius: '10px'\n                                }}\n                              ></div>\n                              <ArtistTitle>{artist}</ArtistTitle>\n                            </ArtistBox>\n                          )\n                      )}\n                  </Box>\n                ))}\n            </RowBox>\n\n            <Titles>Based on your music taste</Titles>\n            <MusicProposals sortedArrayOfFriends={sortedArrayOfFriends} />\n          </Box>\n        </div>\n      )}\n    </Container>\n  )\n}\n\nexport default Content\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 2%;\n`\n\nexport const Titles = styled.h2`\n  color: #333333;\n  font-family: arial;\n  font-size: 20px;\n  letter-spacing: 3px;\n  text-transform: uppercase;\n`\n\nexport const ArtistTitle = styled.p`\n  color: white;\n  margin-left: 6%;\n  font-size: 12px;\n  margin-top: 10%;\n`\n\nexport const Box = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 60vw;\n`\nexport const RowBox = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const ArtistBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-right: 20px;\n  border-radius: 10px;\n  background-color: #333333;\n  box-shadow: 5px 5px 15px #888888;\n  margin-bottom: 10px;\n  width: 90%;\n`\n"]},"metadata":{},"sourceType":"module"}