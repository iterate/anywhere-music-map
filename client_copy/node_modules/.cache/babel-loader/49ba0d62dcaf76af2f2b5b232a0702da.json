{"ast":null,"code":"var _jsxFileName = \"/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport styled from 'styled-components';\nimport Header from './Components/Header';\nimport Sidebar from './Components/Sidebar';\nimport Content from './Components/Content';\nimport axios from 'axios';\nconst spotifyWeb = new SpotifyWebApi();\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkedOption, setCheckedOption] = useState('friendsfavorites');\n  const [personalData, setPersonalData] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n  const [addFriendPage, setAddFriendPage] = useState(false);\n  const [me, setMe] = useState({});\n  const [users, setUsers] = useState([]);\n  const [friends, setFriends] = useState([]);\n  useEffect(() => {\n    //console.log('ME', me)\n    if (me.friends) {\n      setFriends(me.friends);\n      console.log('friends', friends);\n      /* console.log('useeffect me', me)\n      console.log('useeffect me', users)\n      */\n      //me.friends.forEach(friend => {\n\n      /*  console.log('-------------', friends)\n        console.log('')\n        console.log('------------- new', newFriends)\n      */\n      //setFriends(newFriends)\n      //console.log('friends now sat', friends)\n      //friends.push(friend)\n\n      /*  users.forEach(user => {\n          if (user.userName === friend) {\n            const newFriends = [...friends, user]\n            setFriends(newFriends)\n            friends.push(user)\n          }\n        }) \n      })*/\n    }\n  }, [me]);\n  let hashParams = {};\n\n  const getHashParams = () => {\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams.access_token;\n  };\n\n  useEffect(() => {\n    hashParams.access_token ? setLoggedIn(true) : setLoggedIn(false);\n    getMe();\n    getTopArtists();\n  }, []);\n  useEffect(() => {\n    checkedOption === 'friendsfavorites' && setAddFriendPage(false);\n  }, [checkedOption]);\n  getHashParams();\n  useEffect(() => {\n    createUser();\n  }, [personalData, topArtists]);\n\n  const createUser = () => {\n    if (personalData.display_name && (topArtists.items && topArtists.items.length) > 1) {\n      axios.post('http://localhost:8000/api/user', {\n        userName: personalData.display_name,\n        artists: topArtists.items.map(artist => artist),\n        imageUrl: personalData.images && personalData.images[0] && personalData.images[0].url\n      }).then(res => console.log('user result', res));\n    }\n  };\n  /* const createFakeUser = () => {\n    axios.post('http://localhost:8000/api/user', {\n      userName: 'sofie123',\n      artists: [\n        'Dua Lipa',\n        'Metallica',\n        'Miley Cyrus',\n        'DJ Fresh',\n        'Basshunter',\n        'Sam Smith',\n        'John Mayer',\n        'Astrid S',\n        'Sigrid',\n        'Aqua',\n        'Madcon',\n        'Modjo',\n        'The Killers',\n        'No.4',\n        'Rihanna',\n        'Cezinando',\n        'The Weeknd'\n      ],\n      imageUrl: [\n        'https://images.unsplash.com/photo-1464863979621-258859e62245?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80'\n      ]\n    })\n  } */\n\n\n  const getMe = async () => {\n    const access_t = getHashParams();\n    const result = await fetch(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + access_t\n      }\n    });\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t);\n      spotifyWeb.getMe() // note that we don't pass a user id\n      .then(function (data) {\n        setPersonalData(data);\n      }, setLoggedIn(true), function (err) {\n        console.error(err);\n      });\n    }\n\n    let data = await result.json();\n    return data.items;\n  };\n\n  const getTopArtists = async () => {\n    const access_t = getHashParams();\n    const result = await fetch(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + access_t\n      }\n    });\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t);\n      spotifyWeb.getMyTopArtists() // note that we don't pass a user id\n      .then(function (data) {\n        setTopArtists(data);\n      }, function (err) {\n        console.error(err);\n      });\n    }\n\n    let data = await result.json();\n    return data.items;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    setCheckedOption: setCheckedOption,\n    checkedOption: checkedOption,\n    loggedIn: loggedIn,\n    personalData: personalData,\n    setAddFriendPage: setAddFriendPage,\n    me: me,\n    setMe: setMe,\n    users: users,\n    setUsers: setUsers,\n    friends: friends,\n    setFriends: setFriends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://sdk.scdn.co/spotify-player.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(LoginContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Content, {\n    addFriendPage: addFriendPage,\n    topArtistData: topArtists,\n    musicData: personalData,\n    personalData: personalData,\n    users: users,\n    me: me,\n    friends: friends,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8888\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(LoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 19\n    }\n  }, \"Login with Spotify\")))))));\n}\n\nexport default App;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\nexport const LoginContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: #e0e0e0;\n  width: 100%;\n`;\nexport const LoginButton = styled.button`\n  width: 300px;\n  height: 60px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 16px;\n  letter-spacing: 3px;\n  color: white;\n`;","map":{"version":3,"sources":["/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/App.js"],"names":["React","useState","useEffect","SpotifyWebApi","styled","Header","Sidebar","Content","axios","spotifyWeb","App","loggedIn","setLoggedIn","checkedOption","setCheckedOption","personalData","setPersonalData","topArtists","setTopArtists","addFriendPage","setAddFriendPage","me","setMe","users","setUsers","friends","setFriends","console","log","hashParams","getHashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","access_token","getMe","getTopArtists","createUser","display_name","items","length","post","userName","artists","map","artist","imageUrl","images","url","then","res","access_t","result","fetch","method","headers","Authorization","setAccessToken","data","err","error","json","getMyTopArtists","padding","Container","div","Wrapper","LoginContent","LoginButton","button"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport styled from 'styled-components'\nimport Header from './Components/Header'\nimport Sidebar from './Components/Sidebar'\nimport Content from './Components/Content'\nimport axios from 'axios'\n\nconst spotifyWeb = new SpotifyWebApi()\n\nfunction App () {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [checkedOption, setCheckedOption] = useState('friendsfavorites')\n  const [personalData, setPersonalData] = useState([])\n  const [topArtists, setTopArtists] = useState([])\n  const [addFriendPage, setAddFriendPage] = useState(false)\n  const [me, setMe] = useState({})\n  const [users, setUsers] = useState([])\n  const [friends, setFriends] = useState([])\n\n  useEffect(() => {\n    //console.log('ME', me)\n    if (me.friends) {\n      setFriends(me.friends)\n      console.log('friends', friends)\n\n      /* console.log('useeffect me', me)\n      console.log('useeffect me', users)\n */\n      //me.friends.forEach(friend => {\n      /*  console.log('-------------', friends)\n        console.log('')\n        console.log('------------- new', newFriends)\n */\n      //setFriends(newFriends)\n      //console.log('friends now sat', friends)\n      //friends.push(friend)\n      /*  users.forEach(user => {\n          if (user.userName === friend) {\n            const newFriends = [...friends, user]\n            setFriends(newFriends)\n            friends.push(user)\n          }\n        }) \n      })*/\n    }\n  }, [me])\n  let hashParams = {}\n\n  const getHashParams = () => {\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1)\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2])\n      e = r.exec(q)\n    }\n    return hashParams.access_token\n  }\n  useEffect(() => {\n    hashParams.access_token ? setLoggedIn(true) : setLoggedIn(false)\n    getMe()\n    getTopArtists()\n  }, [])\n\n  useEffect(() => {\n    checkedOption === 'friendsfavorites' && setAddFriendPage(false)\n  }, [checkedOption])\n\n  getHashParams()\n\n  useEffect(() => {\n    createUser()\n  }, [personalData, topArtists])\n\n  const createUser = () => {\n    if (\n      personalData.display_name &&\n      (topArtists.items && topArtists.items.length) > 1\n    ) {\n      axios\n        .post('http://localhost:8000/api/user', {\n          userName: personalData.display_name,\n          artists: topArtists.items.map(artist => artist),\n          imageUrl:\n            personalData.images &&\n            personalData.images[0] &&\n            personalData.images[0].url\n        })\n        .then(res => console.log('user result', res))\n    }\n  }\n\n  /* const createFakeUser = () => {\n    axios.post('http://localhost:8000/api/user', {\n      userName: 'sofie123',\n      artists: [\n        'Dua Lipa',\n        'Metallica',\n        'Miley Cyrus',\n        'DJ Fresh',\n        'Basshunter',\n        'Sam Smith',\n        'John Mayer',\n        'Astrid S',\n        'Sigrid',\n        'Aqua',\n        'Madcon',\n        'Modjo',\n        'The Killers',\n        'No.4',\n        'Rihanna',\n        'Cezinando',\n        'The Weeknd'\n      ],\n      imageUrl: [\n        'https://images.unsplash.com/photo-1464863979621-258859e62245?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80'\n      ]\n    })\n  } */\n  const getMe = async () => {\n    const access_t = getHashParams()\n    const result = await fetch(\n      `https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`,\n      {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + access_t\n        }\n      }\n    )\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t)\n      spotifyWeb\n        .getMe() // note that we don't pass a user id\n        .then(\n          function (data) {\n            setPersonalData(data)\n          },\n          setLoggedIn(true),\n          function (err) {\n            console.error(err)\n          }\n        )\n    }\n    let data = await result.json()\n    return data.items\n  }\n\n  const getTopArtists = async () => {\n    const access_t = getHashParams()\n    const result = await fetch(\n      `https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`,\n      {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + access_t\n        }\n      }\n    )\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t)\n      spotifyWeb\n        .getMyTopArtists() // note that we don't pass a user id\n        .then(\n          function (data) {\n            setTopArtists(data)\n          },\n          function (err) {\n            console.error(err)\n          }\n        )\n    }\n    let data = await result.json()\n    return data.items\n  }\n\n  return (\n    <Container>\n      <Header />\n      <Wrapper>\n        <Sidebar\n          setCheckedOption={setCheckedOption}\n          checkedOption={checkedOption}\n          loggedIn={loggedIn}\n          personalData={personalData}\n          setAddFriendPage={setAddFriendPage}\n          me={me}\n          setMe={setMe}\n          users={users}\n          setUsers={setUsers}\n          friends={friends}\n          setFriends={setFriends}\n        />\n        <Wrapper>\n          <script src='https://sdk.scdn.co/spotify-player.js' />\n          <LoginContent>\n            {loggedIn ? (\n              <Content\n                addFriendPage={addFriendPage}\n                topArtistData={topArtists}\n                musicData={personalData}\n                personalData={personalData}\n                users={users}\n                me={me}\n                friends={friends}\n              />\n            ) : (\n              <div style={{ padding: '10%' }}>\n                <a href='http://localhost:8888'>\n                  <LoginButton>Login with Spotify</LoginButton>\n                </a>\n              </div>\n            )}\n          </LoginContent>\n        </Wrapper>\n      </Wrapper>\n    </Container>\n  )\n}\n\nexport default App\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`\n\nexport const LoginContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: #e0e0e0;\n  width: 100%;\n`\n\nexport const LoginButton = styled.button`\n  width: 300px;\n  height: 60px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 16px;\n  letter-spacing: 3px;\n  color: white;\n`\n"]},"metadata":{},"sourceType":"module"}