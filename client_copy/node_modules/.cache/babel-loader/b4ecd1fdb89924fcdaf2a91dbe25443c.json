{"ast":null,"code":"var _jsxFileName = \"/Users/sherveersinghpannu/projects/map/client_copy/src/Components/FindFriends.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nexport const FindFriends = ({\n  friends,\n  setAddFriend,\n  me,\n  addFriend,\n  personalData,\n  allUsers\n}) => {\n  //hente ut folk som er lagret i databasen og legge til\n  const [users, setUsers] = useState([]);\n  const [added, setAdded] = useState();\n  const [myFriends, setMyFriends] = useState([]);\n\n  const getUsers = () => {\n    axios.get('http://localhost:8000/api/user').then(res => {\n      setUsers(res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const m = new Map();\n  useEffect(() => {\n    users.forEach(user => {\n      me && me.friends && me.friends.forEach(friend => {\n        if (user.userName === friend.userName) {\n          myFriends.push(user.userName); //setMyFriends([...myFriends, user.userName])\n        }\n      });\n    });\n  }, [me, users, me.friends]);\n  let f = false;\n\n  const addFriendToUser = user => {\n    axios.put('http://localhost:8000/api/user/' + personalData.display_name, {\n      friends: user\n    }).then(setAddFriend(!addFriend));\n  };\n\n  const compareUsers = () => {\n    const myArtistsLists = new Map();\n    var scoreMap = new Map();\n    var leng;\n\n    for (var i = 0; i < allUsers.length; i++) {\n      var user = allUsers[i];\n      leng = user.artists.length;\n      myArtistsLists[user.userName] = user.artists;\n    }\n\n    for (var f = 0; f < allUsers.length; f++) {\n      var userscore = 0;\n\n      for (var i = 0; i < leng; i++) {\n        for (var j = 0; j < leng; j++) {\n          //console.log(myArtistsLists[me.userName].artists[i])\n          if (myArtistsLists[me.userName][i].name === myArtistsLists[allUsers[f].userName][j].name) {\n            userscore++;\n          }\n        }\n      }\n\n      scoreMap[allUsers[f].userName] = Math.floor(userscore / leng * 100);\n    } //console.log('score', scoreMap)\n\n\n    return scoreMap;\n  };\n\n  const scoreMap = compareUsers();\n  const arrayOfFriendscores = []; //let sortedArrayOfFriends = []\n  //const artistMap = new Map()\n\n  const sortFriends = () => {\n    for (var f = 0; f < allUsers.length; f++) {\n      let userName = allUsers[f].userName;\n      const friendscore = {\n        name: userName,\n        score: scoreMap[userName]\n      };\n      arrayOfFriendscores.push(friendscore);\n    }\n\n    let sorted = arrayOfFriendscores.sort((a, b) => {\n      return b.score - a.score;\n    }); //sortedArrayOfFriends = sorted\n\n    return sorted;\n  };\n\n  const arrayOfSortedFriends = sortFriends();\n\n  const findUserFromName = userName => {\n    users.map((user, i) => {\n      if (user.userName === userName) {\n        addFriendToUser(user);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"Add Users\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      flexWrap: 'wrap',\n      height: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, arrayOfSortedFriends && arrayOfSortedFriends.map((user, index) => user.name !== me.userName && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      flexDirection: 'column'\n    },\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MatchBox, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, scoreMap[user.name], \"%\"), /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, user.name)), myFriends && !myFriends.includes(user.name) && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => findUserFromName(user.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Add user\")))));\n};\nexport default FindFriends;\nexport const Button = styled.button`\n  width: 140px;\n  height: 30px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 3px;\n  color: white;\n  transition: 0.5s ease;\n  outline: none;\n  margin-top: 10px;\n  &: hover {\n    letter-spacing: 5px;\n  }\n`;\nexport const Text = styled.p`\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  color: white;\n  margin: 0;\n`;\nexport const MatchBox = styled.div`\n  width: 300px;\n  height: 120px;\n  background-color: #333333;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n  flex-direction: column;\n`;","map":{"version":3,"sources":["/Users/sherveersinghpannu/projects/map/client_copy/src/Components/FindFriends.js"],"names":["React","useEffect","useState","styled","axios","FindFriends","friends","setAddFriend","me","addFriend","personalData","allUsers","users","setUsers","added","setAdded","myFriends","setMyFriends","getUsers","get","then","res","data","m","Map","forEach","user","friend","userName","push","f","addFriendToUser","put","display_name","compareUsers","myArtistsLists","scoreMap","leng","i","length","artists","userscore","j","name","Math","floor","arrayOfFriendscores","sortFriends","friendscore","score","sorted","sort","a","b","arrayOfSortedFriends","findUserFromName","map","display","flexDirection","flexWrap","height","index","alignItems","marginBottom","includes","Button","button","Text","p","MatchBox","div"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nexport const FindFriends = ({\n  friends,\n  setAddFriend,\n  me,\n  addFriend,\n  personalData,\n  allUsers\n}) => {\n  //hente ut folk som er lagret i databasen og legge til\n  const [users, setUsers] = useState([])\n  const [added, setAdded] = useState()\n  const [myFriends, setMyFriends] = useState([])\n  const getUsers = () => {\n    axios.get('http://localhost:8000/api/user').then(res => {\n      setUsers(res.data.data)\n    })\n  }\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  const m = new Map()\n  useEffect(() => {\n    users.forEach(user => {\n      me &&\n        me.friends &&\n        me.friends.forEach(friend => {\n          if (user.userName === friend.userName) {\n            myFriends.push(user.userName)\n            //setMyFriends([...myFriends, user.userName])\n          }\n        })\n    })\n  }, [me, users, me.friends])\n\n  let f = false\n  const addFriendToUser = user => {\n    axios\n      .put('http://localhost:8000/api/user/' + personalData.display_name, {\n        friends: user\n      })\n      .then(setAddFriend(!addFriend))\n  }\n\n  const compareUsers = () => {\n    const myArtistsLists = new Map()\n    var scoreMap = new Map()\n    var leng\n\n    for (var i = 0; i < allUsers.length; i++) {\n      var user = allUsers[i]\n      leng = user.artists.length\n      myArtistsLists[user.userName] = user.artists\n    }\n\n    for (var f = 0; f < allUsers.length; f++) {\n      var userscore = 0\n      for (var i = 0; i < leng; i++) {\n        for (var j = 0; j < leng; j++) {\n          //console.log(myArtistsLists[me.userName].artists[i])\n          if (\n            myArtistsLists[me.userName][i].name ===\n            myArtistsLists[allUsers[f].userName][j].name\n          ) {\n            userscore++\n          }\n        }\n      }\n\n      scoreMap[allUsers[f].userName] = Math.floor((userscore / leng) * 100)\n    }\n    //console.log('score', scoreMap)\n\n    return scoreMap\n  }\n\n  const scoreMap = compareUsers()\n  const arrayOfFriendscores = []\n\n  //let sortedArrayOfFriends = []\n  //const artistMap = new Map()\n\n  const sortFriends = () => {\n    for (var f = 0; f < allUsers.length; f++) {\n      let userName = allUsers[f].userName\n\n      const friendscore = {\n        name: userName,\n        score: scoreMap[userName]\n      }\n      arrayOfFriendscores.push(friendscore)\n    }\n    let sorted = arrayOfFriendscores.sort((a, b) => {\n      return b.score - a.score\n    })\n    //sortedArrayOfFriends = sorted\n    return sorted\n  }\n\n  const arrayOfSortedFriends = sortFriends()\n\n  const findUserFromName = userName => {\n    users.map((user, i) => {\n      if (user.userName === userName) {\n        addFriendToUser(user)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <h1>Add Users</h1>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flexWrap: 'wrap',\n          height: '600px'\n        }}\n      >\n        {arrayOfSortedFriends &&\n          arrayOfSortedFriends.map(\n            (user, index) =>\n              user.name !== me.userName && (\n                <div\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    flexDirection: 'column'\n                  }}\n                  key={index}\n                >\n                  <MatchBox>\n                    <Text style={{ marginBottom: '10px' }}>\n                      {scoreMap[user.name]}%\n                    </Text>\n                    <Text>{user.name}</Text>\n                  </MatchBox>\n                  {myFriends && !myFriends.includes(user.name) && (\n                    <Button onClick={() => findUserFromName(user.name)}>\n                      Add user\n                    </Button>\n                  )}\n                </div>\n              )\n          )}\n      </div>\n    </div>\n  )\n}\n\nexport default FindFriends\n\nexport const Button = styled.button`\n  width: 140px;\n  height: 30px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 3px;\n  color: white;\n  transition: 0.5s ease;\n  outline: none;\n  margin-top: 10px;\n  &: hover {\n    letter-spacing: 5px;\n  }\n`\nexport const Text = styled.p`\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n  color: white;\n  margin: 0;\n`\n\nexport const MatchBox = styled.div`\n  width: 300px;\n  height: 120px;\n  background-color: #333333;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  border-radius: 10px;\n  flex-direction: column;\n`\n"]},"metadata":{},"sourceType":"module"}