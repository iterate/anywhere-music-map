{"ast":null,"code":"var _jsxFileName = \"/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport styled from 'styled-components';\nimport Header from './Components/Header';\nimport Sidebar from './Components/Sidebar';\nimport Content from './Components/Content';\nconst spotifyWeb = new SpotifyWebApi();\n\nfunction App() {\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [checkedOption, setCheckedOption] = useState();\n  const [personalData, setPersonalData] = useState([]);\n  const [topArtists, setTopArtists] = useState([]);\n  let hashParams = {};\n\n  const getHashParams = () => {\n    var e,\n        r = /([^&;=]+)=?([^&;]*)/g,\n        q = window.location.hash.substring(1);\n    e = r.exec(q);\n\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2]);\n      e = r.exec(q);\n    }\n\n    return hashParams.access_token;\n  };\n\n  useEffect(() => {\n    hashParams.access_token ? setLoggedIn(true) : setLoggedIn(false);\n    getMe();\n    getTopArtists();\n    console.log('PersonalData', personalData);\n  }, []);\n  getHashParams();\n\n  const getMe = async () => {\n    const access_t = getHashParams();\n    const result = await fetch(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + access_t\n      }\n    }).then(console.log('logeg', loggedIn));\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t);\n      spotifyWeb.getMe() // note that we don't pass a user id\n      .then(function (data) {\n        setPersonalData(data);\n        console.log('data?', data);\n      }, console.log('loggedin before', loggedIn), setLoggedIn(true), console.log('loggedin after', loggedIn), function (err) {\n        console.error(err);\n      });\n    }\n\n    let data = await result.json();\n    console.log('DATA', data);\n    return data.items;\n  };\n\n  const getTopArtists = async () => {\n    const access_t = getHashParams();\n    const result = await fetch(`https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`, {\n      method: 'GET',\n      headers: {\n        Authorization: 'Bearer ' + access_t\n      }\n    }).then(console.log('logeg', loggedIn));\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t);\n      spotifyWeb.getMyTopArtists() // note that we don't pass a user id\n      .then(function (data) {\n        setTopArtists(data);\n      }, function (err) {\n        console.error(err);\n      });\n    }\n\n    let data = await result.json();\n    console.log('DATA', data);\n    return data.items;\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sidebar, {\n    setCheckedOption: setCheckedOption,\n    checkedOption: checkedOption,\n    loggedIn: loggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"body\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"script\", {\n    src: \"https://sdk.scdn.co/spotify-player.js\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(LoginContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, loggedIn ? /*#__PURE__*/React.createElement(Content, {\n    topArtistData: topArtists,\n    musicData: personalData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '10%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8888\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 19\n    }\n  }, \"Login with Spotify\")))))));\n}\n\nexport default App;\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\nexport const LoginContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: #e0e0e0;\n  width: 80vw;\n`;","map":{"version":3,"sources":["/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/App.js"],"names":["React","useState","useEffect","SpotifyWebApi","styled","Header","Sidebar","Content","spotifyWeb","App","loggedIn","setLoggedIn","checkedOption","setCheckedOption","personalData","setPersonalData","topArtists","setTopArtists","hashParams","getHashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","access_token","getMe","getTopArtists","console","log","access_t","result","fetch","method","headers","Authorization","then","setAccessToken","data","err","error","json","items","getMyTopArtists","padding","Container","div","Wrapper","LoginContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './App.css'\nimport SpotifyWebApi from 'spotify-web-api-js'\nimport styled from 'styled-components'\nimport Header from './Components/Header'\nimport Sidebar from './Components/Sidebar'\nimport Content from './Components/Content'\n\nconst spotifyWeb = new SpotifyWebApi()\n\nfunction App () {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [checkedOption, setCheckedOption] = useState()\n  const [personalData, setPersonalData] = useState([])\n  const [topArtists, setTopArtists] = useState([])\n  let hashParams = {}\n\n  const getHashParams = () => {\n    var e,\n      r = /([^&;=]+)=?([^&;]*)/g,\n      q = window.location.hash.substring(1)\n    e = r.exec(q)\n    while (e) {\n      hashParams[e[1]] = decodeURIComponent(e[2])\n      e = r.exec(q)\n    }\n    return hashParams.access_token\n  }\n  useEffect(() => {\n    hashParams.access_token ? setLoggedIn(true) : setLoggedIn(false)\n    getMe()\n    getTopArtists()\n    console.log('PersonalData', personalData)\n  }, [])\n\n  getHashParams()\n\n  const getMe = async () => {\n    const access_t = getHashParams()\n    const result = await fetch(\n      `https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`,\n      {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + access_t\n        }\n      }\n    ).then(console.log('logeg', loggedIn))\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t)\n      spotifyWeb\n        .getMe() // note that we don't pass a user id\n        .then(\n          function (data) {\n            setPersonalData(data)\n            console.log('data?', data)\n          },\n          console.log('loggedin before', loggedIn),\n\n          setLoggedIn(true),\n\n          console.log('loggedin after', loggedIn),\n          function (err) {\n            console.error(err)\n          }\n        )\n    }\n    let data = await result.json()\n    console.log('DATA', data)\n    return data.items\n  }\n\n  const getTopArtists = async () => {\n    const access_t = getHashParams()\n    const result = await fetch(\n      `https://api.spotify.com/v1/me/top/artists?time_range=medium_term&limit=10&offset=5`,\n      {\n        method: 'GET',\n        headers: {\n          Authorization: 'Bearer ' + access_t\n        }\n      }\n    ).then(console.log('logeg', loggedIn))\n\n    if (access_t) {\n      spotifyWeb.setAccessToken(access_t)\n      spotifyWeb\n        .getMyTopArtists() // note that we don't pass a user id\n        .then(\n          function (data) {\n            setTopArtists(data)\n          },\n          function (err) {\n            console.error(err)\n          }\n        )\n    }\n    let data = await result.json()\n    console.log('DATA', data)\n    return data.items\n  }\n\n  return (\n    <Container>\n      <Header />\n      <Wrapper>\n        <Sidebar\n          setCheckedOption={setCheckedOption}\n          checkedOption={checkedOption}\n          loggedIn={loggedIn}\n        />\n        <Wrapper>\n          <body>\n            <script src='https://sdk.scdn.co/spotify-player.js' />\n          </body>\n          <LoginContent>\n            {loggedIn ? (\n              <Content topArtistData={topArtists} musicData={personalData} />\n            ) : (\n              <div style={{ padding: '10%' }}>\n                <a href='http://localhost:8888'>\n                  <button>Login with Spotify</button>\n                </a>\n              </div>\n            )}\n          </LoginContent>\n        </Wrapper>\n      </Wrapper>\n    </Container>\n  )\n}\n\nexport default App\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const LoginContent = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: #e0e0e0;\n  width: 80vw;\n`\n"]},"metadata":{},"sourceType":"module"}