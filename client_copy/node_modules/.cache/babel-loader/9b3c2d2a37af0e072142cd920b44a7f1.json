{"ast":null,"code":"var _jsxFileName = \"/Users/sherveersinghpannu/projects/map/client/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nfunction App() {\n  /*   const spotifyLogin = () => {\n      app.get('/login', function(req, res) {\n        var scopes = 'user-read-private user-read-email';\n        res.redirect('https://accounts.spotify.com/authorize' +\n          '?response_type=code' +\n          '&client_id=' + my_client_id +\n          (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n          '&redirect_uri=' + encodeURIComponent(redirect_uri));\n        });\n    } */\n  const APIController = () => {\n    const clientId = 'f2c4a36edf6541c7922bbaab046328a1';\n    const clientSecret = '835373c22ef349ee9c10567e75ac5ba5'; // private methods\n\n    const _getToken = async () => {\n      console.log(\"kommer vi hit\");\n      const result = await fetch('https://accounts.spotify.com/api/token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'Authorization': 'Basic ' + btoa(clientId + ':' + clientSecret)\n        },\n        body: 'grant_type=client_credentials'\n      });\n      const data = await result.json();\n      return data.access_token;\n    };\n\n    _getToken();\n\n    console.log(_getToken());\n\n    const _getGenres = async token => {\n      const result = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await result.json();\n      console.log(data.categories.ite);\n      return data.categories.items;\n    };\n\n    const _getPlaylistByGenre = async (token, genreId) => {\n      const limit = 10;\n      const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=${limit}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await result.json();\n      return data.playlists.items;\n    };\n\n    const _getTracks = async (token, tracksEndPoint) => {\n      const limit = 10;\n      const result = await fetch(`${tracksEndPoint}?limit=${limit}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await result.json();\n      return data.items;\n    };\n\n    const _getTrack = async (token, trackEndPoint) => {\n      const result = await fetch(`${trackEndPoint}`, {\n        method: 'GET',\n        headers: {\n          'Authorization': 'Bearer ' + token\n        }\n      });\n      const data = await result.json();\n      return data;\n    };\n\n    _getToken();\n\n    console.log(_getToken());\n    getGenres(token);\n    console.log(getGenres(token));\n    return {\n      getToken() {\n        console.log(\"hey \");\n        return _getToken();\n      },\n\n      getGenres(token) {\n        return _getGenres(token);\n      },\n\n      getPlaylistByGenre(token, genreId) {\n        return _getPlaylistByGenre(token, genreId);\n      },\n\n      getTracks(token, tracksEndPoint) {\n        return _getTracks(token, tracksEndPoint);\n      },\n\n      getTrack(token, trackEndPoint) {\n        return _getTrack(token, trackEndPoint);\n      }\n\n    };\n  }; // UI Module\n\n\n  const UIController = function () {\n    //object to hold references to html selectors\n    const DOMElements = {\n      selectGenre: '#select_genre',\n      selectPlaylist: '#select_playlist',\n      buttonSubmit: '#btn_submit',\n      divSongDetail: '#song-detail',\n      hfToken: '#hidden_token',\n      divSonglist: '.song-list'\n    }; //public methods\n\n    return {\n      //method to get input fields\n      inputField() {\n        return {\n          genre: document.querySelector(DOMElements.selectGenre),\n          playlist: document.querySelector(DOMElements.selectPlaylist),\n          tracks: document.querySelector(DOMElements.divSonglist),\n          submit: document.querySelector(DOMElements.buttonSubmit),\n          songDetail: document.querySelector(DOMElements.divSongDetail)\n        };\n      },\n\n      // need methods to create select list option\n      createGenre(text, value) {\n        const html = `<option value=\"${value}\">${text}</option>`;\n        document.querySelector(DOMElements.selectGenre).insertAdjacentHTML('beforeend', html);\n      },\n\n      createPlaylist(text, value) {\n        const html = `<option value=\"${value}\">${text}</option>`;\n        document.querySelector(DOMElements.selectPlaylist).insertAdjacentHTML('beforeend', html);\n      },\n\n      // need method to create a track list group item \n      createTrack(id, name) {\n        const html = `<a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-light\" id=\"${id}\">${name}</a>`;\n        document.querySelector(DOMElements.divSonglist).insertAdjacentHTML('beforeend', html);\n      },\n\n      // need method to create the song detail\n      createTrackDetail(img, title, artist) {\n        const detailDiv = document.querySelector(DOMElements.divSongDetail); // any time user clicks a new song, we need to clear out the song detail div\n\n        detailDiv.innerHTML = '';\n        const html = `\n            <div class=\"row col-sm-12 px-0\">\n                <img src=\"${img}\" alt=\"\">        \n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"Genre\" class=\"form-label col-sm-12\">${title}:</label>\n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"artist\" class=\"form-label col-sm-12\">By ${artist}:</label>\n            </div> \n            `;\n        detailDiv.insertAdjacentHTML('beforeend', html);\n      },\n\n      resetTrackDetail() {\n        this.inputField().songDetail.innerHTML = '';\n      },\n\n      resetTracks() {\n        this.inputField().tracks.innerHTML = '';\n        this.resetTrackDetail();\n      },\n\n      resetPlaylist() {\n        this.inputField().playlist.innerHTML = '';\n        this.resetTracks();\n      },\n\n      storeToken(value) {\n        document.querySelector(DOMElements.hfToken).value = value;\n      },\n\n      getStoredToken() {\n        return {\n          token: document.querySelector(DOMElements.hfToken).value\n        };\n      }\n\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => APIController(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, \"Login with Spotify\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sherveersinghpannu/projects/map/client/src/App.js"],"names":["React","App","APIController","clientId","clientSecret","_getToken","console","log","result","fetch","method","headers","btoa","body","data","json","access_token","_getGenres","token","categories","ite","items","_getPlaylistByGenre","genreId","limit","playlists","_getTracks","tracksEndPoint","_getTrack","trackEndPoint","getGenres","getToken","getPlaylistByGenre","getTracks","getTrack","UIController","DOMElements","selectGenre","selectPlaylist","buttonSubmit","divSongDetail","hfToken","divSonglist","inputField","genre","document","querySelector","playlist","tracks","submit","songDetail","createGenre","text","value","html","insertAdjacentHTML","createPlaylist","createTrack","id","name","createTrackDetail","img","title","artist","detailDiv","innerHTML","resetTrackDetail","resetTracks","resetPlaylist","storeToken","getStoredToken"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n/*   const spotifyLogin = () => {\n    app.get('/login', function(req, res) {\n      var scopes = 'user-read-private user-read-email';\n      res.redirect('https://accounts.spotify.com/authorize' +\n        '?response_type=code' +\n        '&client_id=' + my_client_id +\n        (scopes ? '&scope=' + encodeURIComponent(scopes) : '') +\n        '&redirect_uri=' + encodeURIComponent(redirect_uri));\n      });\n  } */\n\n  \n\n\n  const APIController = () => {\n    \n    const clientId = 'f2c4a36edf6541c7922bbaab046328a1';\n    const clientSecret = '835373c22ef349ee9c10567e75ac5ba5';\n\n    // private methods\n    \n    const _getToken = async () => {\n    console.log(\"kommer vi hit\")\n        const result = await fetch('https://accounts.spotify.com/api/token', {\n            method: 'POST',\n            headers: {\n                'Content-Type' : 'application/x-www-form-urlencoded', \n                'Authorization' : 'Basic ' + btoa(clientId + ':' + clientSecret)\n            },\n            body: 'grant_type=client_credentials'\n        });\n\n        const data = await result.json();\n        return data.access_token;\n    }\n        _getToken()\n        console.log(_getToken())\n\n    const _getGenres = async (token) => {\n\n        const result = await fetch(`https://api.spotify.com/v1/browse/categories?locale=sv_US`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        console.log(data.categories.ite)\n        \n        return data.categories.items;\n    }\n\n    const _getPlaylistByGenre = async (token, genreId) => {\n\n        const limit = 10;\n        \n        const result = await fetch(`https://api.spotify.com/v1/browse/categories/${genreId}/playlists?limit=${limit}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data.playlists.items;\n    }\n\n    const _getTracks = async (token, tracksEndPoint) => {\n\n        const limit = 10;\n\n        const result = await fetch(`${tracksEndPoint}?limit=${limit}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data.items;\n    }\n\n    const _getTrack = async (token, trackEndPoint) => {\n\n        const result = await fetch(`${trackEndPoint}`, {\n            method: 'GET',\n            headers: { 'Authorization' : 'Bearer ' + token}\n        });\n\n        const data = await result.json();\n        return data;\n    }\n    _getToken()\n    console.log(_getToken())\n    getGenres(token) \n    console.log(getGenres(token))\n\n    return {\n        getToken() {\n          console.log(\"hey \")\n            return _getToken();\n        },\n        getGenres(token) {\n            return _getGenres(token);\n        },\n        getPlaylistByGenre(token, genreId) {\n            return _getPlaylistByGenre(token, genreId);\n        },\n        getTracks(token, tracksEndPoint) {\n            return _getTracks(token, tracksEndPoint);\n        },\n        getTrack(token, trackEndPoint) {\n            return _getTrack(token, trackEndPoint);\n        }\n    }\n};\n\n\n// UI Module\nconst UIController = (function() {\n\n    //object to hold references to html selectors\n    const DOMElements = {\n        selectGenre: '#select_genre',\n        selectPlaylist: '#select_playlist',\n        buttonSubmit: '#btn_submit',\n        divSongDetail: '#song-detail',\n        hfToken: '#hidden_token',\n        divSonglist: '.song-list'\n    }\n\n    //public methods\n    return {\n\n        //method to get input fields\n        inputField() {\n            return {\n                genre: document.querySelector(DOMElements.selectGenre),\n                playlist: document.querySelector(DOMElements.selectPlaylist),\n                tracks: document.querySelector(DOMElements.divSonglist),\n                submit: document.querySelector(DOMElements.buttonSubmit),\n                songDetail: document.querySelector(DOMElements.divSongDetail)\n            }\n        },\n\n        // need methods to create select list option\n        createGenre(text, value) {\n            const html = `<option value=\"${value}\">${text}</option>`;\n            document.querySelector(DOMElements.selectGenre).insertAdjacentHTML('beforeend', html);\n        }, \n\n        createPlaylist(text, value) {\n            const html = `<option value=\"${value}\">${text}</option>`;\n            document.querySelector(DOMElements.selectPlaylist).insertAdjacentHTML('beforeend', html);\n        },\n\n        // need method to create a track list group item \n        createTrack(id, name) {\n            const html = `<a href=\"#\" class=\"list-group-item list-group-item-action list-group-item-light\" id=\"${id}\">${name}</a>`;\n            document.querySelector(DOMElements.divSonglist).insertAdjacentHTML('beforeend', html);\n        },\n\n        // need method to create the song detail\n        createTrackDetail(img, title, artist) {\n\n            const detailDiv = document.querySelector(DOMElements.divSongDetail);\n            // any time user clicks a new song, we need to clear out the song detail div\n            detailDiv.innerHTML = '';\n\n            const html = \n            `\n            <div class=\"row col-sm-12 px-0\">\n                <img src=\"${img}\" alt=\"\">        \n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"Genre\" class=\"form-label col-sm-12\">${title}:</label>\n            </div>\n            <div class=\"row col-sm-12 px-0\">\n                <label for=\"artist\" class=\"form-label col-sm-12\">By ${artist}:</label>\n            </div> \n            `;\n\n            detailDiv.insertAdjacentHTML('beforeend', html)\n        },\n\n        resetTrackDetail() {\n            this.inputField().songDetail.innerHTML = '';\n        },\n\n        resetTracks() {\n            this.inputField().tracks.innerHTML = '';\n            this.resetTrackDetail();\n        },\n\n        resetPlaylist() {\n            this.inputField().playlist.innerHTML = '';\n            this.resetTracks();\n        },\n        \n        storeToken(value) {\n            document.querySelector(DOMElements.hfToken).value = value;\n        },\n\n        getStoredToken() {\n            return {\n                token: document.querySelector(DOMElements.hfToken).value\n            }\n        }\n    }\n\n})();\n  \n\n  return (\n    <div className=\"App\">\n      \n      <div className=\"container\">\n        <button onClick={() => APIController()}>Login with Spotify</button>\n\n      </div>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}