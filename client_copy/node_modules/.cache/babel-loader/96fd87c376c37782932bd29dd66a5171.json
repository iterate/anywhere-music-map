{"ast":null,"code":"var _jsxFileName = \"/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/Components/FindFriends.js\";\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nexport const FindFriends = ({\n  friends,\n  setAddFriend,\n  me,\n  addFriend,\n  personalData\n}) => {\n  //hente ut folk som er lagret i databasen og legge til\n  const [users, setUsers] = useState([]);\n  const [added, setAdded] = useState();\n  const [myFriends, setMyFriends] = useState([]);\n\n  const getUsers = () => {\n    axios.get('http://localhost:8000/api/user').then(res => {\n      setUsers(res.data.data);\n      console.log('get user data', res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const m = new Map();\n  useEffect(() => {\n    users.forEach(user => {\n      me && me.friends && me.friends.forEach(friend => {\n        if (user.userName === friend.userName) {\n          myFriends.push(user.userName); //setMyFriends([...myFriends, user.userName])\n        }\n      });\n    });\n    console.log('users', users);\n  }, [me, users, me.friends]);\n  let f = false;\n\n  const addFriendToUser = user => {\n    console.log('user', user);\n    /*     user.userName\n     */\n\n    friends.forEach(friend => console.log('all my friends are dead', friend));\n    axios.put('http://localhost:8000/api/user/' + personalData.display_name, {\n      friends: user\n    }).then(setAddFriend(!addFriend));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Add Users\"), ' ', users && users.map((user, index) => user.userName !== me.userName && /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, user.userName), myFriends && !myFriends.includes(user.userName) && /*#__PURE__*/React.createElement(Button, {\n    onClick: () => addFriendToUser(user),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, \"Add user\"))));\n};\nexport default FindFriends;\nexport const Button = styled.button`\n  width: 140px;\n  height: 30px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 3px;\n  color: white;\n  transition: 0.5s ease;\n  outline: none;\n  &: hover {\n    letter-spacing: 5px;\n  }\n`;\nexport const Text = styled.p`\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n`;","map":{"version":3,"sources":["/Users/annikensyvertsen/projects/anywhere-music-map/client_copy/src/Components/FindFriends.js"],"names":["React","useEffect","useState","styled","axios","FindFriends","friends","setAddFriend","me","addFriend","personalData","users","setUsers","added","setAdded","myFriends","setMyFriends","getUsers","get","then","res","data","console","log","m","Map","forEach","user","friend","userName","push","f","addFriendToUser","put","display_name","map","index","includes","Button","button","Text","p"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport axios from 'axios'\n\nexport const FindFriends = ({\n  friends,\n  setAddFriend,\n  me,\n  addFriend,\n  personalData\n}) => {\n  //hente ut folk som er lagret i databasen og legge til\n  const [users, setUsers] = useState([])\n  const [added, setAdded] = useState()\n\n  const [myFriends, setMyFriends] = useState([])\n  const getUsers = () => {\n    axios.get('http://localhost:8000/api/user').then(res => {\n      setUsers(res.data.data)\n      console.log('get user data', res.data.data)\n    })\n  }\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  const m = new Map()\n  useEffect(() => {\n    users.forEach(user => {\n      me &&\n        me.friends &&\n        me.friends.forEach(friend => {\n          if (user.userName === friend.userName) {\n            myFriends.push(user.userName)\n            //setMyFriends([...myFriends, user.userName])\n          }\n        })\n    })\n    console.log('users', users)\n  }, [me, users, me.friends])\n\n  let f = false\n  const addFriendToUser = user => {\n    console.log('user', user)\n    /*     user.userName\n     */ friends.forEach(friend =>\n      console.log('all my friends are dead', friend)\n    )\n    axios\n      .put('http://localhost:8000/api/user/' + personalData.display_name, {\n        friends: user\n      })\n      .then(setAddFriend(!addFriend))\n  }\n\n  return (\n    <div>\n      <h1>Add Users</h1>\n      {/*       <h2>USERS: </h2>\n       */}{' '}\n      {users &&\n        users.map(\n          (user, index) =>\n            user.userName !== me.userName && (\n              <div key={index}>\n                <Text>{user.userName}</Text>\n\n                {myFriends && !myFriends.includes(user.userName) && (\n                  <Button onClick={() => addFriendToUser(user)}>\n                    Add user\n                  </Button>\n                )}\n              </div>\n            )\n        )}\n    </div>\n  )\n}\n\nexport default FindFriends\n\nexport const Button = styled.button`\n  width: 140px;\n  height: 30px;\n  border-radius: 10px;\n  background-color: #ff5fa2;\n  box-shadow: 5px 5px 15px #888888;\n  border-color: #ff5fa2;\n  text-transform: uppercase;\n  font-size: 12px;\n  letter-spacing: 3px;\n  color: white;\n  transition: 0.5s ease;\n  outline: none;\n  &: hover {\n    letter-spacing: 5px;\n  }\n`\nexport const Text = styled.p`\n  font-size: 18px;\n  text-transform: uppercase;\n  letter-spacing: 3px;\n`\n"]},"metadata":{},"sourceType":"module"}